<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-02T20:35:38 IST" name="Default suite" finished-at="2022-06-02T20:35:38 IST" duration-ms="68">
    <groups>
    </groups>
    <test started-at="2022-06-02T20:35:38 IST" name="Default test" finished-at="2022-06-02T20:35:38 IST" duration-ms="68">
      <class name="simpleClassLayer.Test1_forExtentReport">
        <test-method is-config="true" signature="extentSetup()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="extentSetup" finished-at="2022-06-02T20:35:38 IST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method signature="Test1()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="Test1" finished-at="2022-06-02T20:35:38 IST" duration-ms="16" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at simpleClassLayer.Test1_forExtentReport.Test1(Test1_forExtentReport.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="extentTearDown(org.testng.ITestResult)[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="extentTearDown" finished-at="2022-06-02T20:35:38 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test1 status=FAILURE method=Test1_forExtentReport.Test1()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTearDown -->
        <test-method signature="Test2()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="Test2" finished-at="2022-06-02T20:35:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method is-config="true" signature="extentTearDown(org.testng.ITestResult)[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="extentTearDown" finished-at="2022-06-02T20:35:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2 status=SUCCESS method=Test1_forExtentReport.Test2()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTearDown -->
        <test-method signature="Test3()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="Test3" finished-at="2022-06-02T20:35:38 IST" depends-on-methods="simpleClassLayer.Test1_forExtentReport.Test1" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test1_forExtentReport.Test3()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test1_forExtentReport.Test3()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method is-config="true" signature="extentTearDown()[pri:0, instance:simpleClassLayer.Test1_forExtentReport@192d43ce]" started-at="2022-06-02T20:35:38 IST" name="extentTearDown" finished-at="2022-06-02T20:35:39 IST" duration-ms="472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentTearDown -->
      </class> <!-- simpleClassLayer.Test1_forExtentReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
